@inherits Umbraco.Web.Mvc.UmbracoViewPage<BlockListItem>
@using Umbraco.Core.Models.Blocks;
@using ContentModels = Umbraco.Web.PublishedModels;
@{

var content = (ContentModels.Block6)Model.Content;
    
}


@{ 
var site = Model.Root();
var selection = site.Children.Where(x => x.IsVisible());

var siteSettings = Umbraco.ContentQuery
                               .ContentAtRoot()
                               .DescendantsOrSelfOfType("settings")
                               .FirstOrDefault();
                               
var NumMenus = siteSettings.Value<int>("numberOfMenus");

}

<!-- comment out the following line if you want to remove the root node name from the top navigation -->

<nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="collapse navbar-collapse" id="main_nav">
        <ul class="navbar-nav">
            <li class="nav-item"><a class="nav-link @Html.Raw(Model.Id == site.Id ? "navi-link--active" : "")" href="@site.Url">@site.Name</a></li>
                @foreach (var item in selection)
                {    
                    <li class="nav-item dropdown"> 
                    <a class="nav-link dropdown-toogle @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@item.Name</a>
                    @Traverse(item,1,NumMenus)
                    </li>
                }
        </ul>
    </div>
</nav>

@helper Traverse(IPublishedContent node, int level, int NumMenus)
{

    level++;
    
    if (level > NumMenus)
    {
    return;
    }
    
    var selection = node.Children.Where(x => x.IsVisible() @*&& x.ContentType.Alias == "contentPage"*@).ToArray();


    if (selection.Length > 0)
    {
        <ul class="dropdown-menu @Html.Raw(level >= 3 ? "submenu" : "firstlevelmenu")">
            @foreach (var item in selection)
            {
            <li><a href="@item.Url" class="dropdown-item"> @item.Name</a>
                @Traverse(item,level,NumMenus)
            </li>
            }
        </ul>    
    }
}